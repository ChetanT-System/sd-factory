/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.2.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.eclipse.tractusx.selfdescriptionfactory.api;

import com.danubetech.verifiablecredentials.VerifiableCredential;
import org.eclipse.tractusx.selfdescriptionfactory.model.SelfdescriptionPostRequest;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-10-14T12:35:54.092567+03:00[Europe/Istanbul]")
@Validated
@Tag(name = "selfdescription", description = "the selfdescription API")
@RequestMapping("${openapi.sDFactory.base-path:}")
public interface SelfdescriptionApi {

    default SelfdescriptionApiDelegate getDelegate() {
        return new SelfdescriptionApiDelegate() {};
    }

    /**
     * POST /selfdescription : Creates a Verifiable Credential and returns it
     *
     * @param selfdescriptionPostRequest parameters to generate VC (required)
     * @return Created (status code 201)
     */
    @Operation(
        operationId = "selfdescriptionPost",
        summary = "Creates a Verifiable Credential and returns it",
        responses = {
            @ApiResponse(responseCode = "201", description = "Created")
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/selfdescription",
        produces = { "application/vc+ld+json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<VerifiableCredential> selfdescriptionPost(
        @Parameter(name = "SelfdescriptionPostRequest", description = "parameters to generate VC", required = true) @Valid @RequestBody SelfdescriptionPostRequest selfdescriptionPostRequest
    ) {
        return getDelegate().selfdescriptionPost(selfdescriptionPostRequest);
    }

}
